pipeline {
    agent any

    parameters {
        choice(name: 'ACTION', choices: ['apply', 'destroy'], description: 'Choose Terraform action')
        string(name: 'TF_VAR_example', defaultValue: '', description: 'Example variable for Terraform') // Add more parameters as needed
    }

    environment {
        ARM_CLIENT_ID        = credentials('ARM_CLIENT_ID')
        ARM_CLIENT_SECRET    = credentials('ARM_CLIENT_SECRET')
        ARM_SUBSCRIPTION_ID  = credentials('ARM_SUBSCRIPTION_ID')
        ARM_TENANT_ID        = credentials('ARM_TENANT_ID')
    }

    stages {  

        stage('Values Defining') {
            steps {
                echo 'ARM_CLIENT_ID'
            }
        }      

        stage('Terraform Init') {
            steps {
                
                sh 'terraform init'
              
            }
        }

        stage('Terraform Plan') {
            steps {
                
                sh 'terraform plan -out=tfplan'
               
            }
        }

         stage('Terraform Action') {
            steps {
                script {
                    if (params.ACTION == 'apply') {
                        
                            sh 'terraform apply -auto-approve'
                        
                    } else if (params.ACTION == 'destroy') {
                        
                            sh 'terraform destroy -auto-approve'
                        
                    }
                }
            }
        }
    }
    

     post {
        always {
            // Clean workspace and show output
            sh 'terraform output'
            cleanWs()
        }

        success {
            // Notify on success
            echo 'Terraform action completed successfully!'
        }

        failure {
            // Notify on failure
            echo 'Terraform apply or destroy failed.'
        }
    }
}